<Window x:Class="EmoteTool.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:viewModels="clr-namespace:EmoteTool.ViewModels"
        xmlns:material="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
        xmlns:properties="clr-namespace:EmoteTool.Properties"
        mc:Ignorable="d"
        Title="EmoteTool"
        Width="800" Height="500">

    <Window.DataContext>
        <viewModels:MainWindowViewModel />
    </Window.DataContext>

    <Window.Resources>

        <viewModels:TextStateToVisibility x:Key="TextToVisibility" />
        <viewModels:BoolToOpacityConverter x:Key="BoolToOpacity" />

        <ControlTemplate x:Key="EmotesTemplate"
                         TargetType="ListView">

            <StackPanel Orientation="Horizontal">

                <ItemsPresenter />

                <Button Width="80" Height="80"
                        Content="+" FontSize="30"
                        Style="{DynamicResource MaterialDesignFlatButton}"
                        Command="{Binding AddDialogCommand}" />

            </StackPanel>

        </ControlTemplate>

        <DataTemplate x:Key="EmoteItemTemplate" DataType="viewModels:EmoteItem">

            <StackPanel Orientation="Vertical">

                <Image Width="35" Height="35"
                       Source="{Binding Image}" />
                <Label Content="{Binding Name}" />

            </StackPanel>

        </DataTemplate>

        <ItemsPanelTemplate x:Key="ItemsPanelTemplate">
            <StackPanel Orientation="Horizontal" />
        </ItemsPanelTemplate>

    </Window.Resources>

    <Grid>

        <Rectangle x:Name="DialogShade"
                   Panel.ZIndex="10" 
                   IsHitTestVisible="{Binding IsOpen, ElementName=AddDialog}"
                   Fill="Black"
                   IsEnabled="{Binding IsOpen, ElementName=AddDialog}"
                   Opacity="{Binding IsOpen, ElementName=AddDialog, Converter={StaticResource BoolToOpacity}}" />

        <StackPanel Orientation="Vertical"
                    Margin="15, 15">
            
            <TextBlock Text="EmoteTool." FontWeight="DemiBold" FontSize="48" />
        
            <Button Height="45" Width="130" 
                    Margin="0, 15"
                    HorizontalAlignment="Left"
                    Content="Remove"
                    Command="{Binding RemoveCommand}"
                    Style="{DynamicResource MaterialDesignFlatButton}" />

            <material:DialogHost x:Name="AddDialog" 
                                 CloseOnClickAway="True"
                                 IsOpen="{Binding IsAddDialogOpen, Mode=TwoWay}">

                <material:DialogHost.DialogContent>
                    <StackPanel Orientation="Vertical">

                        <Grid Width="200" Margin="15, 15">

                            <TextBlock Text="Enter text for emote name"
                                       Foreground="LightSteelBlue"
                                       Padding="4">
                                <TextBlock.Visibility>
                                    <MultiBinding Converter="{StaticResource TextToVisibility}">
                                        <Binding ElementName="EmoteName" Path="Text.IsEmpty" />
                                        <Binding ElementName="EmoteName" Path="IsFocused" />
                                    </MultiBinding>
                                </TextBlock.Visibility>
                            </TextBlock>

                            <TextBox Name="EmoteName" Background="Transparent"
                                     Text="{Binding EmoteName, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}" />
                        </Grid>
                        
                        <StackPanel Orientation="Horizontal" Margin="0, 5">
                            
                            <Label x:Name="ImagePath"
                                   Content="{Binding FilePath}" />
                            
                            <Button Content="Browse"
                                    Command="{Binding AddCommand}"
                                    CommandParameter="Browse"
                                    Style="{DynamicResource MaterialDesignFlatButton}" />

                        </StackPanel>

                        <Image Source="{Binding Content, ElementName=ImagePath}" />
                        
                        <StackPanel Orientation="Horizontal"
                                    HorizontalAlignment="Center" VerticalAlignment="Center"
                                    Margin="0, 5">

                            <Button Content="Cancel" 
                                    Command="{x:Static material:DialogHost.CloseDialogCommand}" 
                                    Style="{DynamicResource MaterialDesignFlatButton}" />

                            <Button Content="Accept"
                                    Command="{Binding AddCommand}"
                                    CommandParameter="Accept"
                                    Style="{DynamicResource MaterialDesignFlatButton}" />

                        </StackPanel>

                    </StackPanel>
                </material:DialogHost.DialogContent>

            </material:DialogHost>

            <ListView x:Name="Emotes"
                      Margin="0, 15"
                      Template="{StaticResource EmotesTemplate}"
                      ItemsSource="{Binding Emotes}"
                      ItemTemplate="{StaticResource EmoteItemTemplate}"
                      ItemsPanel="{StaticResource ItemsPanelTemplate}"
                      SelectedItem="{Binding SelectedItem}">

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding CopyCommand, Mode=OneWay}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>

            </ListView>

        </StackPanel>

    </Grid>

</Window>